@{
    ViewData["Title"] = "All Questions";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

<div class="container py-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2 class="mb-0">
            <i class="bi bi-chat-left-text me-2"></i>All Questions
        </h2>
        <div class="d-flex gap-2">
            <div class="input-group" style="max-width: 300px;">
                <span class="input-group-text bg-light border-end-0">
                    <i class="bi bi-search"></i>
                </span>
                <input type="text" id="questionSearch" class="form-control border-start-0" placeholder="Search questions...">
            </div>
            <a href="/Admin/CreateQuestion" class="btn btn-primary">
                <i class="bi bi-plus-circle me-2"></i>Create Question
            </a>
        </div>
    </div>

    <div class="card shadow-sm border-0">
        <div class="card-body p-0">
            <div class="table-responsive">
                <table class="table table-hover mb-0" id="questionTable">
                    <thead class="table-light">
                        <tr>
                            <th class="px-4">ID</th>
                            <th>Title</th>
                            <th>Author</th>
                            <th>Tags</th>
                            <th>Created</th>
                            <th class="text-end px-4">Actions</th>
                        </tr>
                    </thead>
                    <tbody></tbody>
                </table>
            </div>
        </div>
    </div>

    <div id="loadingSpinner" class="text-center py-5">
        <div class="spinner-border text-primary" role="status">
            <span class="visually-hidden">Loading...</span>
        </div>
    </div>
</div>

@section Styles {
    <style>
        .table > :not(caption) > * > * {
            padding: 1rem;
        }

        .table tbody tr {
            transition: all 0.2s ease;
        }

        .table tbody tr:hover {
            background-color: var(--bs-primary-bg-subtle);
        }

        .btn {
            transition: all 0.3s ease;
        }

        .btn:hover {
            transform: translateY(-2px);
        }

        .btn-primary {
            box-shadow: 0 2px 4px rgba(13,110,253,.2);
        }

        .btn-primary:hover {
            box-shadow: 0 4px 8px rgba(13,110,253,.3);
        }

        .btn-danger {
            box-shadow: 0 2px 4px rgba(220,53,69,.2);
        }

        .btn-danger:hover {
            box-shadow: 0 4px 8px rgba(220,53,69,.3);
        }

        .answer-card {
            transition: all 0.3s ease;
            border: 1px solid var(--bs-gray-200);
            border-radius: 8px;
            margin-bottom: 1rem;
            padding: 1rem;
        }

        .answer-card:hover {
            border-color: var(--bs-primary);
            box-shadow: 0 2px 8px rgba(13,110,253,.1);
        }

        .tag-badge {
            font-size: 0.85rem;
            padding: 0.35rem 0.65rem;
            border-radius: 6px;
            background-color: var(--bs-primary-bg-subtle);
            color: var(--bs-primary);
            margin-right: 0.5rem;
            margin-bottom: 0.5rem;
            display: inline-block;
        }

        .input-group-text {
            border-color: var(--bs-gray-300);
        }

        .input-group .form-control {
            border-color: var(--bs-gray-300);
        }

        .input-group .form-control:focus {
            border-color: var(--bs-primary);
            box-shadow: none;
        }

        .input-group:focus-within {
            box-shadow: 0 0 0 0.25rem rgba(13,110,253,.15);
            border-radius: 6px;
        }

        .fade-in {
            animation: fadeIn 0.3s ease-out;
        }

    </style>
}

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        const token = localStorage.getItem('token');
        let allQuestions = [];

        $(document).ready(function () {
            loadQuestions();

            // Search functionality
            $('#questionSearch').on('input', function() {
                const searchTerm = $(this).val().toLowerCase();
                const filteredQuestions = allQuestions.filter(q => 
                    q.title.toLowerCase().includes(searchTerm) || 
                    q.userFullName.toLowerCase().includes(searchTerm) ||
                    q.tags.some(tag => tag.toLowerCase().includes(searchTerm))
                );
                displayQuestions(filteredQuestions);
            });
        });

        function loadQuestions() {
            $('#loadingSpinner').show();
            $('#questionTable tbody').empty();

            $.ajax({
                url: 'http://localhost:5000/api/Questions',
                method: 'GET',
                headers: {
                    'Authorization': 'Bearer ' + token
                },
                success: function (data) {
                    allQuestions = data;
                    displayQuestions(data);
                },
                error: function () {
                    $('#questionTable tbody').append(`
                        <tr>
                            <td colspan="6" class="text-center py-5">
                                <div class="alert alert-danger m-0">
                                    <i class="bi bi-exclamation-triangle-fill me-2"></i>
                                    Failed to load questions. Please check your permissions.
                                </div>
                            </td>
                        </tr>
                    `);
                },
                complete: function() {
                    $('#loadingSpinner').hide();
                }
            });
        }

        function displayQuestions(questions) {
            const tbody = $('#questionTable tbody');
            tbody.empty();

            if (!questions.length) {
                tbody.append(`
                    <tr>
                        <td colspan="6" class="text-center py-5">
                            <div class="text-muted">
                                <i class="bi bi-inbox display-4 d-block mb-3"></i>
                                No questions found
                            </div>
                        </td>
                    </tr>
                `);
                return;
            }

            questions.forEach(q => {
                const rowId = 'answers-' + q.id;
                tbody.append(`
                    <tr>
                        <td class="fw-medium">${q.id}</td>
                        <td>${q.title}</td>
                        <td>
                            <div class="d-flex align-items-center">
                                <i class="bi bi-person-circle me-2"></i>
                                ${q.userFullName}
                            </div>
                        </td>
                        <td>
                            ${q.tags.map(tag => `
                                <span class="tag-badge">
                                    <i class="bi bi-tag-fill me-1"></i>${tag}
                                </span>
                            `).join('')}
                        </td>
                        <td>
                            <div class="text-muted">
                                <i class="bi bi-clock me-1"></i>
                                ${new Date(q.createdAt).toLocaleString()}
                            </div>
                        </td>
                        <td class="text-end">
                            <div class="btn-group">
                                <a href="/Admin/EditQuestion/${q.id}" class="btn btn-sm btn-primary">
                                    <i class="bi bi-pencil me-1"></i>Edit
                                </a>
                                <button onclick="deleteQuestion(${q.id})" class="btn btn-sm btn-danger">
                                    <i class="bi bi-trash me-1"></i>Delete
                                </button>
                                <button onclick="toggleAnswers(${q.id})" class="btn btn-sm btn-outline-primary">
                                    <i class="bi bi-chat-left-text me-1"></i>Answers
                                </button>
                            </div>
                        </td>
                    </tr>
                    <tr id="${rowId}" style="display: none;">
                        <td colspan="6" class="p-0">
                            <div class="p-4 bg-light">
                                <div class="answers-loading text-center py-3">
                                    <div class="spinner-border spinner-border-sm text-primary me-2" role="status">
                                        <span class="visually-hidden">Loading...</span>
                                    </div>
                                    Loading answers...
                                </div>
                                <div class="answers-container"></div>
                            </div>
                        </td>
                    </tr>
                `);
            });
        }

        function deleteQuestion(id) {
            if (!confirm("Are you sure you want to delete this question?")) return;

            $.ajax({
                url: 'http://localhost:5000/api/Questions/' + id,
                method: 'DELETE',
                headers: {
                    'Authorization': 'Bearer ' + token
                },
                success: function () {
                    // Show success message
                    const successAlert = $('<div class="alert alert-success alert-dismissible fade show" role="alert">')
                        .html('<i class="bi bi-check-circle-fill me-2"></i>Question deleted successfully!')
                        .insertAfter('.container > .d-flex');
                    
                    // Add close button
                    successAlert.append(`
                        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                    `);

                    // Remove alert after 3 seconds
                    setTimeout(() => {
                        successAlert.alert('close');
                    }, 3000);

                    loadQuestions();
                },
                error: function () {
                    // Show error message
                    const errorAlert = $('<div class="alert alert-danger alert-dismissible fade show" role="alert">')
                        .html('<i class="bi bi-exclamation-triangle-fill me-2"></i>Failed to delete question.')
                        .insertAfter('.container > .d-flex');
                    
                    // Add close button
                    errorAlert.append(`
                        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                    `);

                    // Remove alert after 5 seconds
                    setTimeout(() => {
                        errorAlert.alert('close');
                    }, 5000);
                }
            });
        }

        function toggleAnswers(questionId) {
            const row = $('#answers-' + questionId);
            const container = row.find('.answers-container');

            if (row.is(':visible')) {
                row.slideUp(300);
                container.empty();
            } else {
                row.slideDown(300);
                row.find('.answers-loading').show();
                container.empty();

                $.ajax({
                    url: `http://localhost:5000/api/Answers/question/${questionId}`,
                    method: 'GET',
                    headers: {
                        'Authorization': 'Bearer ' + token
                    },
                    success: function (answers) {
                        row.find('.answers-loading').hide();
                        if (answers.length === 0) {
                            container.html(`
                                <div class="text-center text-muted py-4">
                                    <i class="bi bi-chat-left-text display-4 d-block mb-3"></i>
                                    No answers found for this question.
                                </div>
                            `);
                        } else {
                            answers.forEach(a => {
                                container.append(`
                                    <div class="answer-card fade-in" id="answer-${a.id}">
                                        <div class="d-flex justify-content-between align-items-start mb-2">
                                            <div>
                                                <strong class="d-flex align-items-center">
                                                    <i class="bi bi-person-circle me-2"></i>
                                                    ${a.userFullName}
                                                </strong>
                                                <small class="text-muted">
                                                    <i class="bi bi-clock me-1"></i>
                                                    ${new Date(a.createdAt).toLocaleString()}
                                                </small>
                                            </div>
                                            <div>
                                                ${a.isAccepted ? 
                                                    '<span class="badge bg-success me-2"><i class="bi bi-check-circle me-1"></i>Accepted</span>' : 
                                                    ''}
                                                <span class="badge bg-primary">
                                                    <i class="bi bi-hand-thumbs-up me-1"></i>${a.voteCount} votes
                                                </span>
                                            </div>
                                        </div>
                                        <p class="mb-3">${a.content}</p>
                                        <button onclick="deleteAnswer(${a.id})" class="btn btn-sm btn-danger">
                                            <i class="bi bi-trash me-1"></i>Delete Answer
                                        </button>
                                    </div>
                                `);
                            });
                        }
                    },
                    error: function () {
                        row.find('.answers-loading').hide();
                        container.html(`
                            <div class="alert alert-danger m-0">
                                <i class="bi bi-exclamation-triangle-fill me-2"></i>
                                Failed to load answers.
                            </div>
                        `);
                    }
                });
            }
        }

        function deleteAnswer(answerId) {
            if (!confirm("Are you sure you want to delete this answer?")) return;

            $.ajax({
                url: `http://localhost:5000/api/Answers/${answerId}`,
                method: 'DELETE',
                headers: {
                    'Authorization': 'Bearer ' + token
                },
                success: function () {
                    // Show success message
                    const successAlert = $('<div class="alert alert-success alert-dismissible fade show" role="alert">')
                        .html('<i class="bi bi-check-circle-fill me-2"></i>Answer deleted successfully!')
                        .insertAfter('.container > .d-flex');
                    
                    // Add close button
                    successAlert.append(`
                        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                    `);

                    // Remove alert after 3 seconds
                    setTimeout(() => {
                        successAlert.alert('close');
                    }, 3000);

                    $('#answer-' + answerId).fadeOut(300, function() {
                        $(this).remove();
                    });
                },
                error: function () {
                    // Show error message
                    const errorAlert = $('<div class="alert alert-danger alert-dismissible fade show" role="alert">')
                        .html('<i class="bi bi-exclamation-triangle-fill me-2"></i>Failed to delete answer.')
                        .insertAfter('.container > .d-flex');
                    
                    // Add close button
                    errorAlert.append(`
                        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                    `);

                    // Remove alert after 5 seconds
                    setTimeout(() => {
                        errorAlert.alert('close');
                    }, 5000);
                }
            });
        }
    </script>
}
