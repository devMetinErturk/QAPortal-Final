@{
    ViewData["Title"] = "Users";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

<div class="container py-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2 class="mb-0">
            <i class="bi bi-people-fill me-2"></i>Users
        </h2>
        <div class="input-group" style="max-width: 300px;">
            <span class="input-group-text bg-light border-end-0">
                <i class="bi bi-search"></i>
            </span>
            <input type="text" id="userSearch" class="form-control border-start-0" placeholder="Search users...">
        </div>
    </div>

    <div class="card shadow-sm border-0">
        <div class="card-body p-0">
            <div class="table-responsive">
                <table class="table table-hover mb-0" id="usersTable">
                    <thead class="table-light">
                        <tr>
                            <th class="px-4">Username</th>
                            <th>Full Name</th>
                            <th>Email</th>
                            <th>Roles</th>
                            <th class="text-end px-4">Actions</th>
                        </tr>
                    </thead>
                    <tbody></tbody>
                </table>
            </div>
        </div>
    </div>

    <div id="loadingSpinner" class="text-center py-5">
        <div class="spinner-border text-primary" role="status">
            <span class="visually-hidden">Loading...</span>
        </div>
    </div>
</div>

@section Styles {
    <style>
        .table > :not(caption) > * > * {
            padding: 1rem;
        }

        .table tbody tr {
            transition: all 0.2s ease;
        }

        .table tbody tr:hover {
            background-color: var(--bs-primary-bg-subtle);
        }

        .btn {
            transition: all 0.3s ease;
        }

        .btn:hover {
            transform: translateY(-2px);
        }

        .btn-primary {
            box-shadow: 0 2px 4px rgba(13,110,253,.2);
        }

        .btn-primary:hover {
            box-shadow: 0 4px 8px rgba(13,110,253,.3);
        }

        .btn-danger {
            box-shadow: 0 2px 4px rgba(220,53,69,.2);
        }

        .btn-danger:hover {
            box-shadow: 0 4px 8px rgba(220,53,69,.3);
        }

        .role-badge {
            font-size: 0.85rem;
            padding: 0.35rem 0.65rem;
            border-radius: 6px;
            background-color: var(--bs-primary-bg-subtle);
            color: var(--bs-primary);
            margin-right: 0.5rem;
            margin-bottom: 0.5rem;
            display: inline-block;
        }

        .role-badge.admin {
            background-color: var(--bs-danger-bg-subtle);
            color: var(--bs-danger);
        }

        .role-badge.moderator {
            background-color: var(--bs-warning-bg-subtle);
            color: var(--bs-warning);
        }

        .input-group-text {
            border-color: var(--bs-gray-300);
        }

        .input-group .form-control {
            border-color: var(--bs-gray-300);
        }

        .input-group .form-control:focus {
            border-color: var(--bs-primary);
            box-shadow: none;
        }

        .input-group:focus-within {
            box-shadow: 0 0 0 0.25rem rgba(13,110,253,.15);
            border-radius: 6px;
        }

        .fade-in {
            animation: fadeIn 0.3s ease-out;
        }

       
    </style>
}

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        $(document).ready(function () {
            const token = localStorage.getItem("token");
            let allUsers = [];

            loadUsers();

            // Search functionality
            $('#userSearch').on('input', function() {
                const searchTerm = $(this).val().toLowerCase();
                const filteredUsers = allUsers.filter(user => 
                    user.userName.toLowerCase().includes(searchTerm) || 
                    user.fullName.toLowerCase().includes(searchTerm) ||
                    user.email.toLowerCase().includes(searchTerm) ||
                    user.roles.some(role => role.toLowerCase().includes(searchTerm))
                );
                displayUsers(filteredUsers);
            });

            function loadUsers() {
                $('#loadingSpinner').show();
                $('#usersTable tbody').empty();

                $.ajax({
                    url: "http://localhost:5000/api/User/profile",
                    type: "GET",
                    headers: {
                        "Authorization": "Bearer " + token
                    },
                    success: function (data) {
                        allUsers = Array.isArray(data) ? data : [data];
                        displayUsers(allUsers);
                    },
                    error: function () {
                        $('#usersTable tbody').append(`
                            <tr>
                                <td colspan="5" class="text-center py-5">
                                    <div class="alert alert-danger m-0">
                                        <i class="bi bi-exclamation-triangle-fill me-2"></i>
                                        Failed to load users. Please check your permissions.
                                    </div>
                                </td>
                            </tr>
                        `);
                    },
                    complete: function() {
                        $('#loadingSpinner').hide();
                    }
                });
            }

            function displayUsers(users) {
                const tbody = $("#usersTable tbody");
                tbody.empty();

                if (!users.length) {
                    tbody.append(`
                        <tr>
                            <td colspan="5" class="text-center py-5">
                                <div class="text-muted">
                                    <i class="bi bi-people display-4 d-block mb-3"></i>
                                    No users found
                                </div>
                            </td>
                        </tr>
                    `);
                    return;
                }

                users.forEach(user => {
                    const roles = user.roles || [];
                    const row = `
                        <tr class="fade-in">
                            <td>
                                <div class="d-flex align-items-center">
                                    <i class="bi bi-person-circle me-2"></i>
                                    ${user.userName}
                                </div>
                            </td>
                            <td>${user.fullName}</td>
                            <td>
                                <div class="d-flex align-items-center">
                                    <i class="bi bi-envelope me-2"></i>
                                    ${user.email}
                                </div>
                            </td>
                            <td>
                                ${roles.map(role => `
                                    <span class="role-badge ${role.toLowerCase()}">
                                        <i class="bi bi-shield-fill me-1"></i>${role}
                                    </span>
                                `).join('')}
                            </td>
                            <td class="text-end">
                                <div class="btn-group">
                                    <button class="btn btn-sm btn-primary" onclick="editUser('${user.userName}')">
                                        <i class="bi bi-pencil me-1"></i>Edit
                                    </button>
                                    <button class="btn btn-sm btn-danger" onclick="deleteUser('${user.userName}')">
                                        <i class="bi bi-trash me-1"></i>Delete
                                    </button>
                                </div>
                            </td>
                        </tr>`;
                    tbody.append(row);
                });
            }
        });

        function editUser(username) {
            // TODO: Implement edit user functionality
            alert('Edit user functionality will be implemented soon.');
        }

        function deleteUser(username) {
            if (!confirm('Are you sure you want to delete this user?')) return;
            // TODO: Implement delete user functionality
            alert('Delete user functionality will be implemented soon.');
        }
    </script>
}
